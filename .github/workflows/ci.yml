name: 🧪 CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  style:
    name: 💅 Code Style Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Format Check
        run: dotnet format ./src --verify-no-changes --severity error

  build:
    name: 🏗 Build
    runs-on: ubuntu-latest
    needs: style
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore ./src

      - name: Build
        run: dotnet build ./src --no-restore --configuration Release

  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Run Tests
        run: |
          dotnet test ./src/BlackCandle.Tests \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --logger trx \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura \
                 DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Exclude=[BlackCandle.Domain]*

      - name: Upload Test & Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: test-and-coverage
          path: |
            src/**/TestResults/**/*.trx
            src/**/TestResults/**/*.xml

  coverage:
    name: 📊 Coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: test-and-coverage
          path: ./artifacts

      - name: Prepare coverage
        run: |
          mkdir -p coverage
          find ./artifacts -name "coverage.cobertura.xml" -exec cp {} coverage/coverage.cobertura.xml \;

      - name: Generate coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@5
        with:
          reports: 'coverage/coverage.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'Html;Cobertura;Badges'
          assemblyfilters: '-BlackCandle.Domain'

      - name: Upload to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coveragereport/Cobertura.xml
          flag-name: coverage
