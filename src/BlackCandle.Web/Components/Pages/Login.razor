@page "/admin/login"
@using BlackCandle.Web.Interfaces
@inject IAuthenticationService AuthService
@inject NavigationManager Nav
@rendermode InteractiveServer

<MudContainer MaxWidth="MaxWidth.ExtraSmall" Class="d-flex justify-center align-center full-height">
    <MudPaper Class="pa-6" Elevation="12" Square="false" Style="min-width: 360px; border-radius: 12px;">
        <MudStack Spacing="2">
            <MudTextField @bind-Value="_login"
                          Label="–õ–æ–≥–∏–Ω"
                          Variant="Variant.Filled"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Person"
                          Immediate="true"
                          Required="true"
                          For="@(() => _login)" />

            <MudTextField @bind-Value="_password"
                          Label="–ü–∞—Ä–æ–ª—å"
                          Variant="Variant.Filled"
                          InputType="InputType.Password"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Lock"
                          Required="true"
                          Immediate="true"
                          For="@(() => _password)" />

            <MudButton OnClick="@(async () => await LoginAsync())"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       Style="margin-top: 8px;"
                       FullWidth="true">
                –í–æ–π—Ç–∏
            </MudButton>

            <button @onclick="Clicked">
                üîò –ù–∞–∂–º–∏
            </button>

            @code {
                void Clicked() => Console.WriteLine("üí• –ö–Ω–æ–ø–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç");
            }

            @if (!string.IsNullOrEmpty(_error))
            {
                <MudAlert Severity="Severity.Error" Dense="true" Elevation="0" Class="mt-2">
                    @_error
                </MudAlert>
            }
        </MudStack>
    </MudPaper>
</MudContainer>

@code {
    private string _login = null!;
    private string _password = null!;
    private string _error = null!;

    private async Task LoginAsync()
    {
        _error = null!;

        var success = await AuthService.LoginAsync(_login, _password);
        if (success)
        {
            Nav.NavigateTo("/");
        }
        else
        {
            _error = "–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.";
        }
    }
}
